/// <reference types="react" />
import React from 'react';
import { ElementType, ReactNode } from "react";
type FileStatuses = 'ERROR' | 'SUCCESS' | 'LOADING' | 'UPLOADING';
type FileUploadItemProps = {
    /**
     * Дополнительный класс
     */
    className?: string;
    /**
     * Идентификатор элемента
     */
    id?: string;
    /**
     * Имя файла с расширением
     */
    name?: string;
    /**
     * Размер файла
     */
    size?: string | number;
    /**
     * Дата загрузки файла
     */
    uploadDate?: string;
    /**
     * Ссылка на файл. Если прокидывается этот параметр, то появляется кнопка скачивания
     */
    downloadLink?: string;
    /**
     * Рекомендует браузеру скачивать контент по ссылке.
     * В проп может быть передано рекомендуемое название скачиваемого файла.
     */
    download?: string | true;
    /**
     * Отображение кнопки удаления
     */
    showDelete?: boolean;
    /**
     * Отображение кнопки восстановления
     */
    showRestore?: boolean;
    /**
     * Процент загрузки файла
     */
    uploadPercent?: number;
    /**
     * Статус загрузки файла
     */
    uploadStatus?: FileStatuses;
    /**
     * Сообщение об ошибке
     */
    error?: ReactNode;
    /**
     * Дочерние элементы
     */
    children?: React.ReactNode;
    /**
     * Компонент кастомной иконки
     */
    icon?: ElementType<{
        className?: string;
    }>;
    /**
     * Обработчик загрузки файла
     */
    onDownload?: (id: string) => void;
    /**
     * Обработчик удаления файла
     */
    onDelete?: (id: string) => void;
    /**
     * Обработчик восстановления файла
     */
    onRestore?: (id: string) => void;
    /**
     * Идентификатор для систем автоматизированного тестирования
     */
    dataTestId?: string;
};
declare const FileUploadItem: React.FC<FileUploadItemProps>;
export { FileStatuses, FileUploadItemProps, FileUploadItem };
