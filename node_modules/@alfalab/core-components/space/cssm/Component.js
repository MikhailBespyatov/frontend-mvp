Object.defineProperty(exports, '__esModule', { value: true });

var Item = require('./Item-09e1c4dc.js');
var React = require('react');
var classNames = require('classnames');
var styles = require('./index.module.css');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var styles__default = /*#__PURE__*/_interopDefaultLegacy(styles);

var SpaceSizes = {
    s: 12,
    m: 16,
    l: 20,
};
var getNumberSize = function (size) {
    return typeof size === 'string' ? SpaceSizes[size] : size || 0;
};
/**
 * Позаимствовано с благодарностью из Ant Design
 */
var Space = React.forwardRef(function (props, ref) {
    var _a, _b;
    var children = props.children, className = props.className, _c = props.align, align = _c === void 0 ? 'start' : _c, _d = props.direction, direction = _d === void 0 ? 'vertical' : _d, _e = props.size, size = _e === void 0 ? 'm' : _e, _f = props.wrap, wrap = _f === void 0 ? false : _f, _g = props.divider, divider = _g === void 0 ? false : _g, _h = props.fullWidth, fullWidth = _h === void 0 ? false : _h, dataTestId = props.dataTestId;
    var _j = React__default['default'].useMemo(function () {
        return (Array.isArray(size) ? size : [size, size]).map(function (item) {
            return getNumberSize(item);
        });
    }, [size]), horizontalSize = _j[0], verticalSize = _j[1];
    var childNodes = React.Children.toArray(children);
    if (childNodes.length === 0) {
        return null;
    }
    var directionClassName = styles__default['default'][direction];
    var alignClassName = styles__default['default'][align];
    var containerClassName = classNames__default['default'](styles__default['default'].spaceContainer, directionClassName, (_a = {},
        _a[alignClassName] = align,
        _a[styles__default['default'].spaceContainerFullWidth] = fullWidth,
        _a), className);
    var itemClassName = classNames__default['default'](styles__default['default'].spaceItem, (_b = {},
        _b[styles__default['default'].spaceItemFullWidth] = fullWidth,
        _b));
    var nodes = childNodes.map(function (child, i) { return (
    /* eslint-disable react/no-array-index-key */
    React__default['default'].createElement(Item.Item, { className: itemClassName, key: itemClassName + "-" + i, direction: direction, horizontalSize: horizontalSize, verticalSize: verticalSize, length: childNodes.length, index: i, wrap: wrap, divider: divider }, child)
    /* eslint-enable */
    ); });
    return (React__default['default'].createElement("div", { "data-test-id": dataTestId, className: containerClassName, style: Item.__assign({}, (wrap && { flexWrap: 'wrap', marginBottom: -verticalSize })), ref: ref }, nodes));
});

exports.Space = Space;
