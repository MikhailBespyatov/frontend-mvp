import React from 'react';
import cn from 'classnames';
import { Typography } from '../../../../typography/esm';

var styles = {"tooltip":"chart__tooltip_89xr3","tooltipList":"chart__tooltipList_89xr3","tooltipItem":"chart__tooltipItem_89xr3","tooltipArrow":"chart__tooltipArrow_89xr3","tooltipArrowRight":"chart__tooltipArrowRight_89xr3"};
require('./index.css');

var TooltipContent = function (_a) {
    var payload = _a.payload, separator = _a.separator, label = _a.label, tooltipArrowSide = _a.tooltipArrowSide, arrow = _a.arrow, series = _a.series, labelFormatter = _a.labelFormatter, labelStyle = _a.labelStyle;
    if (!label || payload.length === 0)
        return null;
    return (React.createElement("div", { className: cn(styles.tooltip) },
        arrow && (React.createElement("span", { className: cn(styles.tooltipArrow, tooltipArrowSide ? '' : styles.tooltipArrowRight) })),
        React.createElement("ul", { className: cn(styles.tooltipList) },
            React.createElement("li", { className: cn(styles.tooltipItem), style: labelStyle },
                React.createElement(Typography.Text, { view: 'primary-medium', tag: 'span', weight: 'medium', className: cn(styles.tooltipLabel) }, labelFormatter ? labelFormatter(label) : label)),
            payload.map(function (entry) {
                var data = series.find(function (d) { return d.properties.dataKey === entry.dataKey; });
                if ((data === null || data === void 0 ? void 0 : data.hideTooltip) || (data === null || data === void 0 ? void 0 : data.hide))
                    return null;
                return (React.createElement("li", { className: cn(styles.tooltipItem), key: entry.dataKey, style: { color: entry.color } },
                    React.createElement(Typography.Text, { view: 'primary-medium', tag: 'span', weight: 'medium', className: cn(styles.tooltipValue) },
                        (entry === null || entry === void 0 ? void 0 : entry.formatter) ? entry.formatter(entry.value) : entry.value,
                        separator || ' '),
                    React.createElement(Typography.Text, { view: 'secondary-large', tag: 'span', className: cn(styles.tooltipName) }, "" + entry.name)));
            }))));
};

export { TooltipContent };
