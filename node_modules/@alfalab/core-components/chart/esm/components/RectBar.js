import React, { useMemo } from 'react';
import '../hooks/usePathBar/utils/getRadius.js';
import { usePathBar } from '../hooks/usePathBar/index.js';

// eslint-disable-next-line complexity
var getPath = function (x, width, height, initHeight, topRadius, bottomRadius, initY) {
    return "\n        M" + (x + ((height !== 0 && bottomRadius) || 0)) + " " + (initY + initHeight || 0) + "\n        Q" + x + " " + (initY + initHeight) + " " + x + " " + (initY +
        initHeight -
        ((height !== 0 && bottomRadius) || 0)) + "\n        L" + x + " " + (initY + ((height !== 0 && topRadius) || 0)) + "\n        Q" + x + " " + initY + " " + (x + ((height !== 0 && topRadius) || 0)) + " " + initY + "\n        L" + (x + width - ((height !== 0 && topRadius) || 0)) + " " + initY + "\n        Q" + (x + width) + " " + initY + " " + (x + width) + " " + (initY + (topRadius || 0)) + "\n        L" + (x + width) + " " + (initY + initHeight - ((height !== 0 && bottomRadius) || 0)) + "\n        Q" + (x + width) + " " + (initY + initHeight) + " " + (x +
        width -
        ((height !== 0 && bottomRadius) || 0)) + " " + (initY + initHeight) + "\n        Z\n    ";
};
var RectBar = function (_a) {
    var fill = _a.fill, x = _a.x, y = _a.y, width = _a.width, height = _a.height, radius = _a.radius, background = _a.background;
    var _b = usePathBar({
        radius: radius,
        height: height,
        background: background,
        y: y,
    }), initHeight = _b[0], topRadius = _b[1], bottomRadius = _b[2], initY = _b[3];
    var path = useMemo(function () { return (React.createElement("path", { d: getPath(x, width, height, initHeight, topRadius, bottomRadius, initY), stroke: 'none', fill: fill })); }, [x, width, height, initHeight, topRadius, bottomRadius, initY, fill]);
    return React.createElement(React.Fragment, null, path);
};

export { RectBar };
