Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var cn = require('classnames');
var ChevronBackMIcon = require('@alfalab/icons-glyph/ChevronBackMIcon');
var ChevronForwardMIcon = require('@alfalab/icons-glyph/ChevronForwardMIcon');
var components_tag_index = require('./components/tag/index.js');
require('../tag');
var components_defaultView_index = require('./components/default-view/index.js');
var components_perPageView_index = require('./components/per-page-view/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cn__default = /*#__PURE__*/_interopDefaultLegacy(cn);

var styles = {"component":"pagination__component_ku870","default":"pagination__default_ku870"};
require('./index.css');

var Pagination = function (_a) {
    var _b = _a.currentPageIndex, currentPageIndex = _b === void 0 ? 0 : _b, pagesCount = _a.pagesCount, className = _a.className, _c = _a.sidePadding, sidePadding = _c === void 0 ? 1 : _c, _d = _a.activePadding, activePadding = _d === void 0 ? 2 : _d, _e = _a.hideArrows, hideArrows = _e === void 0 ? true : _e, _f = _a.view, view = _f === void 0 ? 'default' : _f, _g = _a.onPageChange, onPageChange = _g === void 0 ? function () { return null; } : _g, dataTestId = _a.dataTestId;
    var handlePageClick = function (pageIndex) {
        onPageChange(pageIndex);
    };
    var handleNextPageClick = function () {
        handlePageClick(Math.min(pagesCount - 1, currentPageIndex + 1));
    };
    var handlePrevPageClick = function () {
        handlePageClick(Math.max(0, currentPageIndex - 1));
    };
    var shouldRenderPrevArrow = view === 'per-page' || !hideArrows || currentPageIndex > 0;
    var shouldRenderNextArrow = view === 'per-page' || !hideArrows || currentPageIndex < pagesCount - 1;
    return (React__default['default'].createElement("div", { className: cn__default['default'](styles.component, className, styles[view]), "data-test-id": dataTestId },
        shouldRenderPrevArrow && (React__default['default'].createElement(components_tag_index.Tag, { className: styles.arrow, disabled: currentPageIndex <= 0, onClick: handlePrevPageClick, rightAddons: React__default['default'].createElement(ChevronBackMIcon.ChevronBackMIcon, { width: 16, height: 16 }) })),
        view === 'default' && (React__default['default'].createElement(components_defaultView_index.DefaultView, { activePadding: activePadding, sidePadding: sidePadding, currentPageIndex: currentPageIndex, pagesCount: pagesCount, onPageChange: handlePageClick })),
        view === 'per-page' && (React__default['default'].createElement(components_perPageView_index.PerPageView, { currentPageIndex: currentPageIndex, pagesCount: pagesCount })),
        shouldRenderNextArrow && (React__default['default'].createElement(components_tag_index.Tag, { className: styles.arrow, disabled: currentPageIndex >= pagesCount - 1, onClick: handleNextPageClick, rightAddons: React__default['default'].createElement(ChevronForwardMIcon.ChevronForwardMIcon, { width: 16, height: 16 }) }))));
};

exports.Pagination = Pagination;
