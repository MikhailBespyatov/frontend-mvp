Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
require('classnames');
var components_tag_index = require('../tag/index.js');
require('../../../tag');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var styles = {"dots":"pagination__dots_hzik7"};
require('./index.css');

var DefaultView = function (_a) {
    var _b = _a.sidePadding, sidePadding = _b === void 0 ? 2 : _b, _c = _a.activePadding, activePadding = _c === void 0 ? 1 : _c, pagesCount = _a.pagesCount, currentPageIndex = _a.currentPageIndex, _d = _a.onPageChange, onPageChange = _d === void 0 ? function () { return null; } : _d;
    var maxHalfCount = sidePadding + activePadding + 1;
    var maxElementsCount = maxHalfCount * 2 + 1;
    var itemsFit = pagesCount <= maxElementsCount;
    var elementsCount = itemsFit ? pagesCount : maxElementsCount;
    var getPageIndex = React.useCallback(function (elementIndex) {
        var lastIndex = pagesCount - 1;
        var reverseIndex = lastIndex - currentPageIndex;
        var lastElementIndex = elementsCount - 1;
        var reverseElementIndex = lastElementIndex - elementIndex;
        var hasCollapsedItems = function (index) { return !itemsFit && index >= maxHalfCount; };
        if (elementIndex < sidePadding) {
            return elementIndex;
        }
        if (elementIndex === sidePadding && hasCollapsedItems(currentPageIndex)) {
            return null;
        }
        if (reverseElementIndex === sidePadding && hasCollapsedItems(reverseIndex)) {
            return null;
        }
        if (reverseElementIndex < sidePadding) {
            return lastIndex - reverseElementIndex;
        }
        var computedIndex = currentPageIndex - maxHalfCount + elementIndex;
        return Math.min(lastIndex - reverseElementIndex, Math.max(elementIndex, computedIndex));
    }, [currentPageIndex, elementsCount, itemsFit, maxHalfCount, pagesCount, sidePadding]);
    return (React__default['default'].createElement(React__default['default'].Fragment, null, Array(elementsCount)
        .fill('')
        .map(function (_, i) {
        var pageIndex = getPageIndex(i);
        if (pageIndex === null) {
            return (React__default['default'].createElement("div", { key: i.toString(), className: styles.dots }, "..."));
        }
        var active = currentPageIndex === pageIndex;
        return (React__default['default'].createElement(components_tag_index.Tag, { key: i.toString(), checked: active, disabled: active, onClick: function () { return onPageChange(pageIndex); } }, pageIndex + 1));
    })));
};

exports.DefaultView = DefaultView;
