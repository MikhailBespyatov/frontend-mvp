/// <reference types="react-transition-group" />
/// <reference types="react" />
import React from 'react';
import { TransitionProps } from 'react-transition-group/Transition';
import { BaseModalProps, BaseModalContext } from "../../base-modal";
declare const ANIMATION_DURATION = 600;
type DrawerProps = Omit<BaseModalProps, 'container'> & {
    /**
     * Пропсы для анимации контента (CSSTransition)
     */
    contentTransitionProps?: Partial<TransitionProps>;
};
declare const DrawerContext: React.Context<BaseModalContext>;
declare const Drawer: React.ForwardRefExoticComponent<Pick<BaseModalProps, "children" | "className" | "open" | "onClose" | "dataTestId" | "Backdrop" | "backdropProps" | "disableAutoFocus" | "disableFocusLock" | "disableRestoreFocus" | "disableEscapeKeyDown" | "disableBackdropClick" | "keepMounted" | "contentClassName" | "wrapperClassName" | "scrollHandler" | "transitionProps" | "onBackdropClick" | "onEscapeKeyDown" | "onMount" | "onUnmount" | "zIndex"> & {
    /**
     * Пропсы для анимации контента (CSSTransition)
     */
    contentTransitionProps?: Partial<TimeoutProps<undefined>> | Partial<EndListenerProps<undefined>> | undefined;
} & React.RefAttributes<HTMLDivElement>>;
export { ANIMATION_DURATION, DrawerProps, DrawerContext, Drawer };
