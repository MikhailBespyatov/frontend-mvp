import React, { forwardRef, useMemo } from 'react';
import { CSSTransition } from 'react-transition-group';
import cn from 'classnames';
import { BaseModalContext, BaseModal } from '../../base-modal/modern';

var styles = {"component":"drawer__component_17e1c","content":"drawer__content_17e1c","enter":"drawer__enter_17e1c","contentEnter":"drawer__contentEnter_17e1c","backdropEnter":"drawer__backdropEnter_17e1c","enterActive":"drawer__enterActive_17e1c","backdropEnterActive":"drawer__backdropEnterActive_17e1c","backdropEnterDone":"drawer__backdropEnterDone_17e1c","contentEnterActive":"drawer__contentEnterActive_17e1c","exit":"drawer__exit_17e1c","backdropExit":"drawer__backdropExit_17e1c","contentExit":"drawer__contentExit_17e1c","exitActive":"drawer__exitActive_17e1c","backdropExitActive":"drawer__backdropExitActive_17e1c","backdropExitDone":"drawer__backdropExitDone_17e1c","contentExitActive":"drawer__contentExitActive_17e1c"};
require('./index.css');

const ANIMATION_DURATION = 600;
const DrawerContext = BaseModalContext;
const Drawer = forwardRef(({ open, className, children, contentTransitionProps, ...restProps }, ref) => {
    const transitionProps = useMemo(() => ({
        classNames: {
            enter: styles.enter,
            appear: styles.enter,
            enterActive: styles.enterActive,
            appearActive: styles.enterActive,
            exit: styles.exit,
            exitActive: styles.exitActive,
        },
        timeout: ANIMATION_DURATION,
        ...restProps.transitionProps,
    }), [restProps.transitionProps]);
    const backdropProps = useMemo(() => ({
        classNames: {
            enter: styles.backdropEnter,
            appear: styles.backdropEnter,
            enterActive: styles.backdropEnterActive,
            appearActive: styles.backdropEnterActive,
            enterDone: styles.backdropEnterDone,
            appearDone: styles.backdropEnterDone,
            exit: styles.backdropExit,
            exitActive: styles.backdropExitActive,
            exitDone: styles.backdropExitDone,
        },
        timeout: ANIMATION_DURATION,
        ...restProps.backdropProps,
    }), [restProps.backdropProps]);
    const contentProps = useMemo(() => ({
        classNames: {
            enter: styles.contentEnter,
            appear: styles.contentEnter,
            enterActive: styles.contentEnterActive,
            appearActive: styles.contentEnterActive,
            exit: styles.contentExit,
            exitActive: styles.contentExitActive,
        },
        timeout: ANIMATION_DURATION,
        ...contentTransitionProps,
    }), [contentTransitionProps]);
    return (React.createElement(BaseModal, Object.assign({}, restProps, { scrollHandler: 'content', ref: ref, open: open, className: cn(styles.component, className), transitionProps: transitionProps, backdropProps: backdropProps }),
        React.createElement(CSSTransition, Object.assign({ appear: true }, contentProps, { in: open }),
            React.createElement("div", { className: styles.content }, children))));
});

export { ANIMATION_DURATION, Drawer, DrawerContext };
