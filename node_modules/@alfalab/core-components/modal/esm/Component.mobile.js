import { _ as __rest, a as __assign } from './tslib.es6-327e6722.js';
import React, { forwardRef, isValidElement, cloneElement } from 'react';
import cn from 'classnames';
import { BaseModal } from '../../base-modal/esm';
import './Context.js';
import '../../button/esm';
import { Closer } from './components/closer/Component.js';
import './components/header/Component.js';
import './components/content/Component.js';
import './components/footer/Component.js';
import { t as transitions } from './transitions.module-c8dac06a.js';
import { useMedia } from '@alfalab/hooks';
import { HeaderMobile } from './components/header/Component.mobile.js';
import { ContentMobile } from './components/content/Component.mobile.js';
import { FooterMobile } from './components/footer/Component.mobile.js';

var styles = {"component":"modal__component_1vhr3"};
require('./mobile.css');

var ModalMobileComponent = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, restProps = __rest(_a, ["children", "className"]);
    var size = useMedia([
        ['s', '(max-width: 375px)'],
        ['m', '(min-width: 376px)'],
    ], 's')[0];
    return (React.createElement(BaseModal, __assign({}, restProps, { ref: ref, transitionProps: __assign({ classNames: transitions }, restProps.transitionProps), className: cn(className, styles.component), backdropProps: __assign(__assign({}, restProps.backdropProps), { invisible: true }) }), React.Children.map(children, function (child) {
        return isValidElement(child)
            ? cloneElement(child, { size: child.props.size || size, fullscreen: true })
            : child;
    })));
});
var ModalMobile = Object.assign(ModalMobileComponent, {
    Content: ContentMobile,
    Header: HeaderMobile,
    Footer: FooterMobile,
    Closer: Closer,
});

export { ModalMobile };
