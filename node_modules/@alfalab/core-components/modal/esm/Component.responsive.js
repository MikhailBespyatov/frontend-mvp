import { _ as __rest, a as __assign } from './tslib.es6-327e6722.js';
import React, { forwardRef, useMemo, useContext } from 'react';
import 'classnames';
import '../../base-modal/esm';
import 'react-merge-refs';
import './Context.js';
import '../../button/esm';
import { Closer } from './components/closer/Component.js';
import './components/header/Component.js';
import './components/header/Component.desktop.js';
import './components/content/Component.js';
import './components/content/Component.desktop.js';
import './components/footer/Component.js';
import './components/footer/Component.desktop.js';
import './transitions.module-c8dac06a.js';
import { ModalDesktop } from './Component.desktop.js';
import { useMedia } from '@alfalab/hooks';
import './components/header/Component.mobile.js';
import './components/content/Component.mobile.js';
import './components/footer/Component.mobile.js';
import { ModalMobile } from './Component.mobile.js';

var ResponsiveContext = React.createContext({
    view: 'desktop',
});
function createResponsive(desktop, mobile) {
    function ResponsiveChild(props) {
        var view = useContext(ResponsiveContext).view;
        var Child = view === 'desktop' ? desktop : mobile;
        return React.createElement(Child, __assign({}, props));
    }
    return ResponsiveChild;
}
var ModalResponsiveComponent = forwardRef(function (_a, ref) {
    var children = _a.children, restProps = __rest(_a, ["children"]);
    var view = useMedia([
        ['mobile', '(max-width: 767px)'],
        ['desktop', '(min-width: 768px)'],
    ], 'desktop')[0];
    var contextValue = useMemo(function () { return ({ view: view }); }, [view]);
    var Component = view === 'desktop' ? ModalDesktop : ModalMobile;
    return (React.createElement(ResponsiveContext.Provider, { value: contextValue },
        React.createElement(Component, __assign({ ref: ref }, restProps), children)));
});
var ModalResponsive = Object.assign(ModalResponsiveComponent, {
    Header: createResponsive(ModalDesktop.Header, ModalMobile.Header),
    Content: createResponsive(ModalDesktop.Content, ModalMobile.Content),
    Footer: createResponsive(ModalDesktop.Footer, ModalMobile.Footer),
    Closer: Closer,
});

export { ModalResponsive };
