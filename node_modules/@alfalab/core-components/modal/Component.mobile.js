Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('./tslib.es6-d1b7fb9e.js');
var React = require('react');
var cn = require('classnames');
var coreComponentsBaseModal = require('../base-modal');
require('./Context.js');
require('../button');
var components_closer_Component = require('./components/closer/Component.js');
require('./components/header/Component.js');
require('./components/content/Component.js');
require('./components/footer/Component.js');
var transitions_module = require('./transitions.module-9c7cb980.js');
var hooks = require('@alfalab/hooks');
var components_header_Component_mobile = require('./components/header/Component.mobile.js');
var components_content_Component_mobile = require('./components/content/Component.mobile.js');
var components_footer_Component_mobile = require('./components/footer/Component.mobile.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cn__default = /*#__PURE__*/_interopDefaultLegacy(cn);

var styles = {"component":"modal__component_1vhr3"};
require('./mobile.css');

var ModalMobileComponent = React.forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, restProps = tslib_es6.__rest(_a, ["children", "className"]);
    var size = hooks.useMedia([
        ['s', '(max-width: 375px)'],
        ['m', '(min-width: 376px)'],
    ], 's')[0];
    return (React__default['default'].createElement(coreComponentsBaseModal.BaseModal, tslib_es6.__assign({}, restProps, { ref: ref, transitionProps: tslib_es6.__assign({ classNames: transitions_module.transitions }, restProps.transitionProps), className: cn__default['default'](className, styles.component), backdropProps: tslib_es6.__assign(tslib_es6.__assign({}, restProps.backdropProps), { invisible: true }) }), React__default['default'].Children.map(children, function (child) {
        return React.isValidElement(child)
            ? React.cloneElement(child, { size: child.props.size || size, fullscreen: true })
            : child;
    })));
});
var ModalMobile = Object.assign(ModalMobileComponent, {
    Content: components_content_Component_mobile.ContentMobile,
    Header: components_header_Component_mobile.HeaderMobile,
    Footer: components_footer_Component_mobile.FooterMobile,
    Closer: components_closer_Component.Closer,
});

exports.ModalMobile = ModalMobile;
