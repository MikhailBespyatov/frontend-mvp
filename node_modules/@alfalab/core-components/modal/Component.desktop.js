Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('./tslib.es6-d1b7fb9e.js');
var React = require('react');
var cn = require('classnames');
var coreComponentsBaseModal = require('../base-modal');
var mergeRefs = require('react-merge-refs');
require('./Context.js');
require('../button');
var components_closer_Component = require('./components/closer/Component.js');
require('./components/header/Component.js');
var components_header_Component_desktop = require('./components/header/Component.desktop.js');
require('./components/content/Component.js');
var components_content_Component_desktop = require('./components/content/Component.desktop.js');
require('./components/footer/Component.js');
var components_footer_Component_desktop = require('./components/footer/Component.desktop.js');
var transitions_module = require('./transitions.module-9c7cb980.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cn__default = /*#__PURE__*/_interopDefaultLegacy(cn);
var mergeRefs__default = /*#__PURE__*/_interopDefaultLegacy(mergeRefs);

var styles = {"wrapper":"modal__wrapper_1tg9k","component":"modal__component_1tg9k","fullscreen":"modal__fullscreen_1tg9k","s":"modal__s_1tg9k","m":"modal__m_1tg9k","l":"modal__l_1tg9k"};
require('./desktop.css');

var ModalDesktopComponent = React.forwardRef(function (_a, ref) {
    var _b;
    var _c = _a.size, size = _c === void 0 ? 's' : _c, fixedPosition = _a.fixedPosition, fullscreen = _a.fullscreen, children = _a.children, className = _a.className, wrapperClassName = _a.wrapperClassName, _d = _a.transitionProps, transitionProps = _d === void 0 ? {} : _d, restProps = tslib_es6.__rest(_a, ["size", "fixedPosition", "fullscreen", "children", "className", "wrapperClassName", "transitionProps"]);
    var modalRef = React.useRef(null);
    var handleEntered = React.useCallback(function (node, isAppearing) {
        if (fixedPosition && modalRef.current) {
            var content = modalRef.current.querySelector("." + styles.component);
            if (content) {
                var marginTop = window.getComputedStyle(content).marginTop;
                content.style.marginTop = marginTop;
            }
        }
        if (transitionProps.onEntered) {
            transitionProps.onEntered(node, isAppearing);
        }
    }, [fixedPosition, transitionProps]);
    return (React__default['default'].createElement(coreComponentsBaseModal.BaseModal, tslib_es6.__assign({}, restProps, { ref: mergeRefs__default['default']([ref, modalRef]), wrapperClassName: cn__default['default'](styles.wrapper, wrapperClassName, (_b = {},
            _b[styles.fullscreen] = fullscreen,
            _b)), className: cn__default['default'](styles.component, className, !fullscreen && styles[size]), backdropProps: tslib_es6.__assign(tslib_es6.__assign({}, restProps.backdropProps), { invisible: fullscreen }), transitionProps: tslib_es6.__assign(tslib_es6.__assign({ classNames: transitions_module.transitions }, transitionProps), { onEntered: handleEntered }) }), React__default['default'].Children.map(children, function (child) {
        return React.isValidElement(child)
            ? React.cloneElement(child, { size: child.props.size || size, fullscreen: fullscreen })
            : child;
    })));
});
var ModalDesktop = Object.assign(ModalDesktopComponent, {
    Content: components_content_Component_desktop.ContentDesktop,
    Header: components_header_Component_desktop.HeaderDesktop,
    Footer: components_footer_Component_desktop.FooterDesktop,
    Closer: components_closer_Component.Closer,
});

exports.ModalDesktop = ModalDesktop;
