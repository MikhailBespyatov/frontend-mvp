Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('./tslib.es6-d1b7fb9e.js');
var React = require('react');
require('classnames');
require('../base-modal');
require('react-merge-refs');
require('./Context.js');
require('../button');
var components_closer_Component = require('./components/closer/Component.js');
require('./components/header/Component.js');
require('./components/header/Component.desktop.js');
require('./components/content/Component.js');
require('./components/content/Component.desktop.js');
require('./components/footer/Component.js');
require('./components/footer/Component.desktop.js');
var Component_desktop = require('./Component.desktop.js');
require('./transitions.module-9c7cb980.js');
var hooks = require('@alfalab/hooks');
require('./components/header/Component.mobile.js');
require('./components/content/Component.mobile.js');
require('./components/footer/Component.mobile.js');
var Component_mobile = require('./Component.mobile.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var ResponsiveContext = React__default['default'].createContext({
    view: 'desktop',
});
function createResponsive(desktop, mobile) {
    function ResponsiveChild(props) {
        var view = React.useContext(ResponsiveContext).view;
        var Child = view === 'desktop' ? desktop : mobile;
        return React__default['default'].createElement(Child, tslib_es6.__assign({}, props));
    }
    return ResponsiveChild;
}
var ModalResponsiveComponent = React.forwardRef(function (_a, ref) {
    var children = _a.children, restProps = tslib_es6.__rest(_a, ["children"]);
    var view = hooks.useMedia([
        ['mobile', '(max-width: 767px)'],
        ['desktop', '(min-width: 768px)'],
    ], 'desktop')[0];
    var contextValue = React.useMemo(function () { return ({ view: view }); }, [view]);
    var Component = view === 'desktop' ? Component_desktop.ModalDesktop : Component_mobile.ModalMobile;
    return (React__default['default'].createElement(ResponsiveContext.Provider, { value: contextValue },
        React__default['default'].createElement(Component, tslib_es6.__assign({ ref: ref }, restProps), children)));
});
var ModalResponsive = Object.assign(ModalResponsiveComponent, {
    Header: createResponsive(Component_desktop.ModalDesktop.Header, Component_mobile.ModalMobile.Header),
    Content: createResponsive(Component_desktop.ModalDesktop.Content, Component_mobile.ModalMobile.Content),
    Footer: createResponsive(Component_desktop.ModalDesktop.Footer, Component_mobile.ModalMobile.Footer),
    Closer: components_closer_Component.Closer,
});

exports.ModalResponsive = ModalResponsive;
