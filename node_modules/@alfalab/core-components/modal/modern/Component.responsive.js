import React, { forwardRef, useMemo, useContext } from 'react';
import 'classnames';
import 'react-merge-refs';
import { useMedia } from '@alfalab/hooks';
import '../../base-modal/modern';
import './Context.js';
import '../../button/modern';
import { Closer } from './components/closer/Component.js';
import './components/header/Component.js';
import './components/header/Component.desktop.js';
import './components/content/Component.js';
import './components/content/Component.desktop.js';
import './components/footer/Component.js';
import './components/footer/Component.desktop.js';
import './transitions.module-c8dac06a.js';
import { ModalDesktop } from './Component.desktop.js';
import './components/header/Component.mobile.js';
import './components/content/Component.mobile.js';
import './components/footer/Component.mobile.js';
import { ModalMobile } from './Component.mobile.js';

const ResponsiveContext = React.createContext({
    view: 'desktop',
});
function createResponsive(desktop, mobile) {
    function ResponsiveChild(props) {
        const { view } = useContext(ResponsiveContext);
        const Child = view === 'desktop' ? desktop : mobile;
        return React.createElement(Child, Object.assign({}, props));
    }
    return ResponsiveChild;
}
const ModalResponsiveComponent = forwardRef(({ children, ...restProps }, ref) => {
    const [view] = useMedia([
        ['mobile', '(max-width: 767px)'],
        ['desktop', '(min-width: 768px)'],
    ], 'desktop');
    const contextValue = useMemo(() => ({ view }), [view]);
    const Component = view === 'desktop' ? ModalDesktop : ModalMobile;
    return (React.createElement(ResponsiveContext.Provider, { value: contextValue },
        React.createElement(Component, Object.assign({ ref: ref }, restProps), children)));
});
const ModalResponsive = Object.assign(ModalResponsiveComponent, {
    Header: createResponsive(ModalDesktop.Header, ModalMobile.Header),
    Content: createResponsive(ModalDesktop.Content, ModalMobile.Content),
    Footer: createResponsive(ModalDesktop.Footer, ModalMobile.Footer),
    Closer,
});

export { ModalResponsive };
