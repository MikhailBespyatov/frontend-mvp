import React, { forwardRef } from 'react';
import cn from 'classnames';
import '../../button/esm';
import '@alfalab/icons-classic/ArrowDownMIcon';
import '@alfalab/icons-classic/ArrowDownSIcon';
import { _ as __rest, a as __assign, F as Field } from './Component-f3728290.js';
import { BaseSelect, OptionsList, Optgroup, Option } from '../../select/esm';

var styles = {"container":"picker-button__container_1s99m","optionsPopover":"picker-button__optionsPopover_1s99m","sideGap":"picker-button__sideGap_1s99m","optionsListContainer":"picker-button__optionsListContainer_1s99m"};
require('./index.css');

var SIDE_POSITIONS = ['right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'];
var PickerButton = forwardRef(function (_a, ref) {
    var _b;
    var _c = _a.OptionsList, OptionsList$1 = _c === void 0 ? OptionsList : _c, _d = _a.Optgroup, Optgroup$1 = _d === void 0 ? Optgroup : _d, _e = _a.Option, Option$1 = _e === void 0 ? Option : _e, view = _a.view, loading = _a.loading, _f = _a.size, size = _f === void 0 ? 'm' : _f, className = _a.className, leftAddons = _a.leftAddons, rightAddons = _a.rightAddons, popperClassName = _a.popperClassName, optionsListClassName = _a.optionsListClassName, restProps = __rest(_a, ["OptionsList", "Optgroup", "Option", "view", "loading", "size", "className", "leftAddons", "rightAddons", "popperClassName", "optionsListClassName"]);
    var isSideGap = !!restProps.popoverPosition && SIDE_POSITIONS.includes(restProps.popoverPosition);
    return (React.createElement(BaseSelect, __assign({}, restProps, { ref: ref, Option: Option$1, Field: Field, size: size === 'm' ? 'm' : 's', fieldProps: {
            view: view,
            loading: loading,
            /** size у select, button несовместимы */
            buttonSize: size,
            leftAddons: leftAddons,
            rightAddons: rightAddons,
        }, Optgroup: Optgroup$1, OptionsList: OptionsList$1, className: cn(styles.container, className), popperClassName: cn(styles.optionsPopover, popperClassName, (_b = {},
            _b[styles.sideGap] = isSideGap,
            _b)), optionsListClassName: cn(styles.optionsListContainer, optionsListClassName), selected: [], closeOnSelect: true })));
});

export { PickerButton };
