import React, { forwardRef } from 'react';
import cn from 'classnames';
import '@alfalab/icons-classic/ArrowDownMIcon';
import '@alfalab/icons-classic/ArrowDownSIcon';
import { OptionsList, Optgroup, Option, BaseSelect } from '../../select/modern';
import '../../button/modern';
import { Field } from './field/Component.js';

var styles = {"container":"picker-button__container_1s99m","optionsPopover":"picker-button__optionsPopover_1s99m","sideGap":"picker-button__sideGap_1s99m","optionsListContainer":"picker-button__optionsListContainer_1s99m"};
require('./index.css');

const SIDE_POSITIONS = ['right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'];
const PickerButton = forwardRef(({ OptionsList: OptionsList$1 = OptionsList, Optgroup: Optgroup$1 = Optgroup, Option: Option$1 = Option, view, loading, size = 'm', className, leftAddons, rightAddons, popperClassName, optionsListClassName, ...restProps }, ref) => {
    const isSideGap = !!restProps.popoverPosition && SIDE_POSITIONS.includes(restProps.popoverPosition);
    return (React.createElement(BaseSelect, Object.assign({}, restProps, { ref: ref, Option: Option$1, Field: Field, size: size === 'm' ? 'm' : 's', fieldProps: {
            view,
            loading,
            /** size у select, button несовместимы */
            buttonSize: size,
            leftAddons,
            rightAddons,
        }, Optgroup: Optgroup$1, OptionsList: OptionsList$1, className: cn(styles.container, className), popperClassName: cn(styles.optionsPopover, popperClassName, {
            [styles.sideGap]: isSideGap,
        }), optionsListClassName: cn(styles.optionsListContainer, optionsListClassName), selected: [], closeOnSelect: true })));
});

export { PickerButton };
