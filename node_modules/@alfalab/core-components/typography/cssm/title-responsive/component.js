Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('../tslib.es6-ce870b46.js');
var React = require('react');
require('classnames');
require('../colors.module.css');
var title_component = require('../title/component.js');
var commonStyles = require('../title/common.module.css');
var styles = require('./index.module.css');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var commonStyles__default = /*#__PURE__*/_interopDefaultLegacy(commonStyles);
var styles__default = /*#__PURE__*/_interopDefaultLegacy(styles);

var TitleResponsive = function (props) {
    /**
     * Если поменять Object.assign на деструктуризацию, то упадут тесты.
     * Видимо, это особенность работы jest и css-modules.
     */
    return React__default['default'].createElement(title_component.Title, tslib_es6.__assign({}, props, { styles: Object.assign(commonStyles__default['default'], styles__default['default']) }));
};

exports.TitleResponsive = TitleResponsive;
