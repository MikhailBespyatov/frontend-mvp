import React from 'react';
import cn from 'classnames';
import 'compute-scroll-into-view';
import { ScrollableContainer } from '../scrollable-container/Component.js';
import { useTabs } from '../../useTabs.js';
import { Tag } from '../../../../tag/modern';

const SecondaryTabList = ({ styles = {}, className, containerClassName, size, titles = [], selectedId = titles.length ? titles[0].id : undefined, scrollable = true, tagSize = 'xs', onChange, dataTestId, }) => {
    const { focusedTab, selectedTab, getTabListItemProps } = useTabs({
        titles,
        selectedId,
        onChange,
    });
    const renderContent = () => titles
        .filter(item => !item.hidden)
        .map((item, index) => (React.createElement(Tag, Object.assign({}, getTabListItemProps(index), { key: item.id, className: styles.title, checked: item.id === selectedId, size: tagSize, rightAddons: item.rightAddons }), item.title)));
    return (React.createElement("div", { role: 'tablist', "data-test-id": dataTestId, className: cn(styles.component, className, size && styles[size]) }, scrollable ? (React.createElement(ScrollableContainer, { activeChild: focusedTab || selectedTab, containerClassName: containerClassName }, renderContent())) : (React.createElement("div", { className: cn(styles.container, containerClassName) }, renderContent()))));
};

export { SecondaryTabList };
