import React, { useState, useCallback, useEffect } from 'react';
import cn from 'classnames';
import { BankAlfaLColorIcon } from '@alfalab/icons-classic/BankAlfaLColorIcon';
import { CameraMIcon } from '@alfalab/icons-glyph/CameraMIcon';
import { MirXxlIcon, VisaXxlIcon, MastercardLIcon } from '@alfalab/icons-logotype';
import { MaskedInput } from '../../masked-input/modern';
import { validateCardNumber } from './utils.js';

var styles = {"component":"bank-card__component_7e341","aspectRatioContainer":"bank-card__aspectRatioContainer_7e341","content":"bank-card__content_7e341","label":"bank-card__label_7e341","focused":"bank-card__focused_7e341","filled":"bank-card__filled_7e341","input":"bank-card__input_7e341","bankLogo":"bank-card__bankLogo_7e341","brandLogo":"bank-card__brandLogo_7e341","usePhoto":"bank-card__usePhoto_7e341"};
require('./index.css');

// prettier-ignore
const cardMask = [/\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/];
// prettier-ignore
const accountNumberMask = [/\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/, ' ', /\d/, /\d/, /\d/, /\d/];
const getBrandIcon = (value = '') => {
    // Показываем логотип только после ввода всех цифр карты
    if (value.replace(/\s/g, '').length === 16 && validateCardNumber(value)) {
        if (value.startsWith('2'))
            return React.createElement(MirXxlIcon, null);
        if (value.startsWith('4'))
            return React.createElement(VisaXxlIcon, null);
        if (value.startsWith('5'))
            return React.createElement(MastercardLIcon, null);
        if (value.startsWith('6'))
            return React.createElement(MastercardLIcon, null);
    }
    return null;
};
const BankCard = React.forwardRef(({ bankLogo = React.createElement(BankAlfaLColorIcon, null), backgroundColor = '#EF3124', inputLabel = 'Номер карты или счёта', value, className, onUsePhoto, onChange, dataTestId, }, ref) => {
    const uncontrolled = value === undefined;
    const [brandIcon, setBrandIcon] = useState(getBrandIcon(value));
    const getMask = useCallback((newValue) => newValue.length <= cardMask.length ? cardMask : accountNumberMask, []);
    const handleInputChange = useCallback((event, payload) => {
        if (uncontrolled) {
            setBrandIcon(getBrandIcon(event.target.value));
        }
        if (onChange) {
            onChange(event, payload);
        }
    }, [onChange, uncontrolled]);
    const renderRightAddons = useCallback(() => (React.createElement("button", { type: 'button', className: styles.usePhoto, onClick: onUsePhoto },
        React.createElement(CameraMIcon, null))), [onUsePhoto]);
    useEffect(() => {
        setBrandIcon(getBrandIcon(value));
    }, [value]);
    return (React.createElement("div", { className: cn(styles.component, className) },
        React.createElement("div", { className: styles.aspectRatioContainer },
            React.createElement("div", { className: styles.content, style: { backgroundColor } },
                React.createElement("div", { className: styles.bankLogo }, bankLogo),
                React.createElement(MaskedInput, { ref: ref, value: value, mask: getMask, block: true, label: inputLabel, rightAddons: renderRightAddons(), inputClassName: styles.input, labelClassName: styles.label, filledClassName: styles.filled, focusedClassName: styles.focused, onChange: handleInputChange, dataTestId: dataTestId, inputMode: 'numeric', pattern: '[0-9]*' }),
                brandIcon && React.createElement("div", { className: styles.brandLogo }, brandIcon)))));
});
BankCard.defaultProps = {
    bankLogo: React.createElement(BankAlfaLColorIcon, null),
    backgroundColor: '#EF3124',
    inputLabel: 'Номер карты или счёта',
};

export { BankCard };
