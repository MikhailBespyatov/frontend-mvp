/// <reference types="react" />
import React from 'react';
import { CountryCode } from 'libphonenumber-js';
import { SelectProps } from "../../select";
import { Country } from '@alfalab/utils';
import { InputAutocompleteProps } from "../../input-autocomplete";
type IntlPhoneInputProps = Partial<Omit<InputAutocompleteProps, 'onChange'>> & Pick<SelectProps, 'preventFlip'> & {
    /**
     * Значение
     */
    value: string;
    /**
     * Набор цветов для компонента
     */
    colors?: 'default' | 'inverted';
    /**
     * Обработчик события изменения значения
     */
    onChange: (value: string) => void;
    /**
     * Дефолтный код страны
     */
    defaultCountryIso2?: string;
    /**
     * Обработчик события изменения страны
     */
    onCountryChange?: (countryCode: CountryCode) => void;
    /**
     * Список стран
     */
    countries?: Country[];
    /**
     * Возможность стереть код страны
     */
    clearableCountryCode?: boolean;
};
declare const IntlPhoneInput: React.ForwardRefExoticComponent<Partial<Pick<InputAutocompleteProps, "selected" | "valueRenderer" | "Optgroup" | "size" | "value" | "disabled" | "multiple" | "name" | "placeholder" | "readOnly" | "className" | "id" | "onFocus" | "onBlur" | "onInput" | "onScroll" | "options" | "visibleOptions" | "open" | "label" | "error" | "hint" | "Arrow" | "dataTestId" | "fieldClassName" | "success" | "block" | "Option" | "inputProps" | "optionsListClassName" | "optionClassName" | "popperClassName" | "autocomplete" | "allowUnselect" | "closeOnSelect" | "circularNavigation" | "defaultOpen" | "popoverPosition" | "preventFlip" | "optionsListWidth" | "optionsSize" | "fieldProps" | "optionsListProps" | "optionProps" | "onOpen" | "OptionsList" | "updatePopover" | "zIndexPopover" | "showEmptyOptionsList" | "Input">> & Pick<SelectProps, "preventFlip"> & {
    /**
     * Значение
     */
    value: string;
    /**
     * Набор цветов для компонента
     */
    colors?: "default" | "inverted" | undefined;
    /**
     * Обработчик события изменения значения
     */
    onChange: (value: string) => void;
    /**
     * Дефолтный код страны
     */
    defaultCountryIso2?: string | undefined;
    /**
     * Обработчик события изменения страны
     */
    onCountryChange?: ((countryCode: CountryCode) => void) | undefined;
    /**
     * Список стран
     */
    countries?: Country[] | undefined;
    /**
     * Возможность стереть код страны
     */
    clearableCountryCode?: boolean | undefined;
} & React.RefAttributes<HTMLInputElement>>;
export { IntlPhoneInputProps, IntlPhoneInput };
