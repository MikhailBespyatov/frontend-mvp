import React, { useRef } from 'react';
import cn from 'classnames';
import mergeRefs from 'react-merge-refs';
import { useFocus } from '@alfalab/hooks';
import { FlagIcon } from '../flag-icon/component.js';

var styles = {"component":"intl-phone-input__component_uqfp7","flagIconContainer":"intl-phone-input__flagIconContainer_uqfp7","disabled":"intl-phone-input__disabled_uqfp7","inner":"intl-phone-input__inner_uqfp7","l":"intl-phone-input__l_uqfp7","xl":"intl-phone-input__xl_uqfp7","focusVisible":"intl-phone-input__focusVisible_uqfp7"};
require('./index.css');

const SelectField = ({ selected, Arrow, size, disabled, innerProps = {}, }) => {
    const wrapperRef = useRef(null);
    const [focusVisible] = useFocus(wrapperRef, 'keyboard');
    const ref = innerProps.ref ? mergeRefs([innerProps.ref, wrapperRef]) : wrapperRef;
    return (React.createElement("div", { ref: ref, className: cn(styles.component, size && styles[size], {
            [styles.focusVisible]: focusVisible,
            [styles.disabled]: disabled,
        }) },
        React.createElement("div", Object.assign({}, innerProps, { className: styles.inner }),
            selected && (React.createElement("span", { className: styles.flagIconContainer },
                React.createElement(FlagIcon, { country: selected.value, size: size }))),
            Arrow)));
};

export { SelectField };
