import React, { useMemo, useCallback } from 'react';
import 'classnames';
import 'react-merge-refs';
import '@alfalab/hooks';
import { FlagIcon } from '../flag-icon/component.js';
import { SelectField } from '../select-field/component.js';
import { OptionsList, Select } from '../../../../select/modern';

var styles = {"component":"intl-phone-input__component_4sq0p","option":"intl-phone-input__option_4sq0p","flag":"intl-phone-input__flag_4sq0p","countryName":"intl-phone-input__countryName_4sq0p","dialCode":"intl-phone-input__dialCode_4sq0p"};
require('./index.css');

/* eslint-disable jsx-a11y/no-static-element-interactions */
const CountriesSelect = ({ disabled, size, selected, countries, fieldWidth, preventFlip, onChange, dataTestId, }) => {
    const options = useMemo(() => countries.map(({ iso2, dialCode, name }) => ({
        key: iso2,
        value: iso2,
        content: (React.createElement("span", { className: styles.option },
            React.createElement(FlagIcon, { country: iso2, className: styles.flag }),
            React.createElement("span", { className: styles.optionTextWrap },
                React.createElement("span", { className: styles.countryName }, name),
                React.createElement("span", { className: styles.dialCode },
                    "+",
                    dialCode)))),
    })), [countries]);
    const renderOptionsList = useCallback(props => (React.createElement("div", { style: { width: fieldWidth || 0 } },
        React.createElement(OptionsList, Object.assign({}, props)))), [fieldWidth]);
    return (React.createElement("div", { className: styles.component, onClick: event => event.stopPropagation() },
        React.createElement(Select, { dataTestId: dataTestId, disabled: disabled, size: size, options: options, selected: selected, onChange: onChange, Field: SelectField, OptionsList: renderOptionsList, preventFlip: preventFlip })));
};

export { CountriesSelect };
