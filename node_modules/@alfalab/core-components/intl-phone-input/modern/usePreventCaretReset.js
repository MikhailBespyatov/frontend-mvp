import { useCallback, useEffect } from 'react';

function usePreventCaretReset({ inputRef, clearableCountryCode, countryCodeLength }) {
    const handleDeleteChar = useCallback((event) => {
        const input = event.target;
        const caretPosition = input.selectionStart;
        if (event.key !== 'Backspace' || !caretPosition)
            return;
        if (!clearableCountryCode && caretPosition <= countryCodeLength) {
            event.preventDefault();
            return;
        }
        const newPosition = caretPosition - 1;
        requestAnimationFrame(() => {
            input.setSelectionRange(newPosition, newPosition);
        });
    }, [clearableCountryCode, countryCodeLength]);
    useEffect(() => {
        const input = inputRef.current;
        if (!input)
            return;
        input.addEventListener('keydown', handleDeleteChar);
        // eslint-disable-next-line consistent-return
        return () => {
            input.removeEventListener('keydown', handleDeleteChar);
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [handleDeleteChar]);
}

export { usePreventCaretReset };
