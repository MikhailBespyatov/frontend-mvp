import React, { useMemo, useCallback } from 'react';
import 'classnames';
import 'react-merge-refs';
import '@alfalab/hooks';
import { FlagIcon } from '../flag-icon/component.js';
import { a as __assign, S as SelectField } from '../../component-723851a1.js';
import { OptionsList, Select } from '../../../../select/esm';

var styles = {"component":"intl-phone-input__component_4sq0p","option":"intl-phone-input__option_4sq0p","flag":"intl-phone-input__flag_4sq0p","countryName":"intl-phone-input__countryName_4sq0p","dialCode":"intl-phone-input__dialCode_4sq0p"};
require('./index.css');

var CountriesSelect = function (_a) {
    var disabled = _a.disabled, size = _a.size, selected = _a.selected, countries = _a.countries, fieldWidth = _a.fieldWidth, preventFlip = _a.preventFlip, onChange = _a.onChange, dataTestId = _a.dataTestId;
    var options = useMemo(function () {
        return countries.map(function (_a) {
            var iso2 = _a.iso2, dialCode = _a.dialCode, name = _a.name;
            return ({
                key: iso2,
                value: iso2,
                content: (React.createElement("span", { className: styles.option },
                    React.createElement(FlagIcon, { country: iso2, className: styles.flag }),
                    React.createElement("span", { className: styles.optionTextWrap },
                        React.createElement("span", { className: styles.countryName }, name),
                        React.createElement("span", { className: styles.dialCode },
                            "+",
                            dialCode)))),
            });
        });
    }, [countries]);
    var renderOptionsList = useCallback(function (props) { return (React.createElement("div", { style: { width: fieldWidth || 0 } },
        React.createElement(OptionsList, __assign({}, props)))); }, [fieldWidth]);
    return (React.createElement("div", { className: styles.component, onClick: function (event) { return event.stopPropagation(); } },
        React.createElement(Select, { dataTestId: dataTestId, disabled: disabled, size: size, options: options, selected: selected, onChange: onChange, Field: SelectField, OptionsList: renderOptionsList, preventFlip: preventFlip })));
};

export { CountriesSelect };
