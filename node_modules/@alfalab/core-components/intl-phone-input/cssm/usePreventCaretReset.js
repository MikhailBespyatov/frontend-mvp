Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

function usePreventCaretReset(_a) {
    var inputRef = _a.inputRef, clearableCountryCode = _a.clearableCountryCode, countryCodeLength = _a.countryCodeLength;
    var handleDeleteChar = React.useCallback(function (event) {
        var input = event.target;
        var caretPosition = input.selectionStart;
        if (event.key !== 'Backspace' || !caretPosition)
            return;
        if (!clearableCountryCode && caretPosition <= countryCodeLength) {
            event.preventDefault();
            return;
        }
        var newPosition = caretPosition - 1;
        requestAnimationFrame(function () {
            input.setSelectionRange(newPosition, newPosition);
        });
    }, [clearableCountryCode, countryCodeLength]);
    React.useEffect(function () {
        var input = inputRef.current;
        if (!input)
            return;
        input.addEventListener('keydown', handleDeleteChar);
        // eslint-disable-next-line consistent-return
        return function () {
            input.removeEventListener('keydown', handleDeleteChar);
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [handleDeleteChar]);
}

exports.usePreventCaretReset = usePreventCaretReset;
