import { _ as __rest, a as __assign } from '../../tslib.es6-4b711877.js';
import React, { useMemo } from 'react';
import cn from 'classnames';
import { THeadCell } from '../thead-cell/Component.js';
import { SortIconAsc } from './sort-icon-asc.js';
import { SortIconDesc } from './sort-icon-desc.js';
import { SortIconUnset } from './sort-icon-unset.js';

var styles = {"component":"table__component_1f4lp","content":"table__content_1f4lp","icon":"table__icon_1f4lp","reverse":"table__reverse_1f4lp","sorted":"table__sorted_1f4lp"};
require('./index.css');

var TSortableHeadCell = function (_a) {
    var _b, _c;
    var children = _a.children, className = _a.className, defaultIsSortedDesc = _a.defaultIsSortedDesc, isSortedDesc = _a.isSortedDesc, textAlign = _a.textAlign, onSort = _a.onSort, restProps = __rest(_a, ["children", "className", "defaultIsSortedDesc", "isSortedDesc", "textAlign", "onSort"]);
    var SortIcon = useMemo(function () {
        var value = isSortedDesc;
        if (value === undefined)
            value = defaultIsSortedDesc;
        if (typeof value === 'boolean')
            return value ? SortIconDesc : SortIconAsc;
        return SortIconUnset;
    }, [defaultIsSortedDesc, isSortedDesc]);
    return (React.createElement(THeadCell, __assign({ className: cn(className, styles.component) }, restProps),
        React.createElement("div", { className: cn(styles.content, (_b = {}, _b[styles.reverse] = textAlign === 'right', _b)) },
            children,
            React.createElement(SortIcon, { onClick: onSort, className: cn(styles.icon, (_c = {},
                    _c[styles.sorted] = isSortedDesc !== undefined,
                    _c)) }))));
};

export { TSortableHeadCell };
