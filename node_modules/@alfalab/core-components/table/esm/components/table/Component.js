import { _ as __rest, a as __assign } from '../../tslib.es6-4b711877.js';
import React, { forwardRef, useRef, useMemo } from 'react';
import cn from 'classnames';
import '../thead/Component.js';
import '../../utils.js';
import { findAllHeadCellsProps } from './utils.js';
import { TableContext } from '../table-context/index.js';

var styles = {"component":"table__component_1q7yw","wrapper":"table__wrapper_1q7yw","hasPagination":"table__hasPagination_1q7yw","table":"table__table_1q7yw"};
require('./index.css');

var Table = forwardRef(function (_a, ref) {
    var _b;
    var className = _a.className, children = _a.children, _c = _a.compactView, compactView = _c === void 0 ? false : _c, _d = _a.wrapper, wrapper = _d === void 0 ? true : _d, pagination = _a.pagination, dataTestId = _a.dataTestId, restProps = __rest(_a, ["className", "children", "compactView", "wrapper", "pagination", "dataTestId"]);
    var wrapperRef = useRef(null);
    var columnsConfiguration = useMemo(function () {
        return findAllHeadCellsProps(children).map(function (columnProps, index) { return ({
            width: columnProps.width,
            textAlign: columnProps.textAlign,
            hidden: columnProps.hidden,
            index: index,
        }); });
    }, [children]);
    return (React.createElement(TableContext.Provider, { value: { columnsConfiguration: columnsConfiguration, compactView: compactView, wrapperRef: wrapperRef } },
        React.createElement("div", { ref: wrapperRef, className: cn(styles.component, className, (_b = {},
                _b[styles.wrapper] = wrapper,
                _b[styles.hasPagination] = !!pagination,
                _b)), "data-test-id": dataTestId },
            React.createElement("table", __assign({ ref: ref, className: styles.table }, restProps), children),
            pagination)));
});

export { Table };
