import React, { useMemo } from 'react';
import cn from 'classnames';
import { THeadCell } from '../thead-cell/Component.js';
import { SortIconAsc } from './sort-icon-asc.js';
import { SortIconDesc } from './sort-icon-desc.js';
import { SortIconUnset } from './sort-icon-unset.js';

var styles = {"component":"table__component_1f4lp","content":"table__content_1f4lp","icon":"table__icon_1f4lp","reverse":"table__reverse_1f4lp","sorted":"table__sorted_1f4lp"};
require('./index.css');

const TSortableHeadCell = ({ children, className, defaultIsSortedDesc, isSortedDesc, textAlign, onSort, ...restProps }) => {
    const SortIcon = useMemo(() => {
        let value = isSortedDesc;
        if (value === undefined)
            value = defaultIsSortedDesc;
        if (typeof value === 'boolean')
            return value ? SortIconDesc : SortIconAsc;
        return SortIconUnset;
    }, [defaultIsSortedDesc, isSortedDesc]);
    return (React.createElement(THeadCell, Object.assign({ className: cn(className, styles.component) }, restProps),
        React.createElement("div", { className: cn(styles.content, { [styles.reverse]: textAlign === 'right' }) },
            children,
            React.createElement(SortIcon, { onClick: onSort, className: cn(styles.icon, {
                    [styles.sorted]: isSortedDesc !== undefined,
                }) }))));
};

export { TSortableHeadCell };
