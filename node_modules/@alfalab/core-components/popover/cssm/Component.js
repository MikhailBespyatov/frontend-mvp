Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var cn = require('classnames');
var reactTransitionGroup = require('react-transition-group');
var reactPopper = require('react-popper');
var maxSize = require('popper-max-size-modifier');
var mergeRefs = require('react-merge-refs');
var resizeObserver = require('resize-observer');
var coreComponentsStack = require('../../stack/cssm');
var coreComponentsPortal = require('../../portal/cssm');
var styles = require('./index.module.css');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cn__default = /*#__PURE__*/_interopDefaultLegacy(cn);
var maxSize__default = /*#__PURE__*/_interopDefaultLegacy(maxSize);
var mergeRefs__default = /*#__PURE__*/_interopDefaultLegacy(mergeRefs);
var styles__default = /*#__PURE__*/_interopDefaultLegacy(styles);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var __assign = function () {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var DEFAULT_TRANSITION = {
    timeout: 150,
};
var CSS_TRANSITION_CLASS_NAMES = {
    enter: styles__default['default'].enter,
    enterActive: styles__default['default'].enterActive,
    exit: styles__default['default'].exit,
    exitActive: styles__default['default'].exitActive,
};
var availableHieghtModifier = {
    name: 'availableHeight',
    enabled: true,
    phase: 'beforeWrite',
    requires: ['maxSize'],
    fn: function (_a) {
        var _b = _a.state, modifiersData = _b.modifiersData, popper = _b.elements.popper;
        var height = modifiersData.maxSize.height;
        var content = popper.querySelector("." + styles__default['default'].scrollableContent);
        if (content && !content.style.maxHeight) {
            content.style.maxHeight = height + "px";
        }
    },
};
/**
 * Минимальный размер anchorElement,
 * при котором возможно смещение стрелочки относительно центра
 */
var MIN_ARROW_SHIFT_SIZE = 75;
var Popover = React.forwardRef(function (_a, ref) {
    var children = _a.children, getPortalContainer = _a.getPortalContainer, _b = _a.transition, transition = _b === void 0 ? DEFAULT_TRANSITION : _b, anchorElement = _a.anchorElement, useAnchorWidth = _a.useAnchorWidth, _c = _a.offset, offset = _c === void 0 ? [0, 0] : _c, _d = _a.withArrow, withArrow = _d === void 0 ? false : _d, _e = _a.withTransition, withTransition = _e === void 0 ? true : _e, _f = _a.position, position = _f === void 0 ? 'left' : _f, preventFlip = _a.preventFlip, popperClassName = _a.popperClassName, arrowClassName = _a.arrowClassName, className = _a.className, open = _a.open, dataTestId = _a.dataTestId, update = _a.update, _g = _a.transitionDuration, transitionDuration = _g === void 0 ? transition.timeout + "ms" : _g, _h = _a.zIndex, zIndex = _h === void 0 ? coreComponentsStack.stackingOrder.POPOVER : _h, fallbackPlacements = _a.fallbackPlacements, _j = _a.preventOverflow, preventOverflow = _j === void 0 ? true : _j, _k = _a.availableHeight, availableHeight = _k === void 0 ? false : _k;
    var _l = React.useState(anchorElement), referenceElement = _l[0], setReferenceElement = _l[1];
    var _m = React.useState(null), popperElement = _m[0], setPopperElement = _m[1];
    var _o = React.useState(null), arrowElement = _o[0], setArrowElement = _o[1];
    var _p = React.useState(false), arrowShift = _p[0], setArrowShift = _p[1];
    var updatePopperRef = React.useRef();
    var getModifiers = React.useCallback(function () {
        var modifiers = [{ name: 'offset', options: { offset: offset } }];
        if (withArrow) {
            modifiers.push({ name: 'arrow', options: { element: arrowElement } });
        }
        if (preventFlip) {
            modifiers.push({ name: 'flip', options: { fallbackPlacements: [] } });
        }
        if (fallbackPlacements) {
            modifiers.push({ name: 'flip', options: { fallbackPlacements: fallbackPlacements } });
        }
        if (preventOverflow) {
            modifiers.push({ name: 'preventOverflow', options: { mainAxis: false } });
        }
        if (availableHeight) {
            modifiers.push(__assign(__assign({}, maxSize__default['default']), { options: {} }));
            modifiers.push(__assign(__assign({}, availableHieghtModifier), { options: {} }));
        }
        return modifiers;
    }, [
        offset,
        withArrow,
        preventFlip,
        fallbackPlacements,
        preventOverflow,
        availableHeight,
        arrowElement,
    ]);
    var _q = reactPopper.usePopper(referenceElement, popperElement, {
        placement: position,
        modifiers: getModifiers(),
    }), popperStyles = _q.styles, attributes = _q.attributes, updatePopper = _q.update;
    if (updatePopper) {
        updatePopperRef.current = updatePopper;
    }
    var updatePopoverWidth = React.useCallback(function () {
        if (useAnchorWidth && updatePopperRef.current) {
            updatePopperRef.current();
        }
    }, [useAnchorWidth]);
    React.useEffect(function () {
        setReferenceElement(anchorElement);
    }, [anchorElement]);
    React.useEffect(function () {
        if (updatePopper) {
            updatePopper();
        }
    }, [updatePopper, arrowElement, children]);
    React.useEffect(function () {
        if (update && !update.current && updatePopper) {
            // eslint-disable-next-line no-param-reassign
            update.current = updatePopper;
        }
    });
    React.useEffect(function () {
        if (useAnchorWidth) {
            var observer_1 = new resizeObserver.ResizeObserver(updatePopoverWidth);
            if (anchorElement) {
                observer_1.observe(anchorElement);
            }
            return function () {
                observer_1.disconnect();
            };
        }
        return function () { return ({}); };
    }, [anchorElement, updatePopoverWidth, useAnchorWidth]);
    /**
     * По дизайну, если у тултипа позиционирование -start/-end, то стрелочка немного сдвигается вбок.
     * Но если anchorElement слишком маленький, то стрелочка сдвигаться не должна.
     */
    React.useEffect(function () {
        var shiftedPosition = position.includes('-start') || position.includes('-end');
        if (shiftedPosition && referenceElement) {
            var _a = referenceElement.getBoundingClientRect(), width = _a.width, height = _a.height;
            var size = position.includes('left') || position.includes('right') ? height : width;
            if (size >= MIN_ARROW_SHIFT_SIZE) {
                setArrowShift(true);
            }
        }
    }, [referenceElement, position]);
    var renderContent = function (computedZIndex, style) {
        var _a, _b;
        return (React__default['default'].createElement("div", __assign({ ref: mergeRefs__default['default']([ref, setPopperElement]), style: __assign({ zIndex: computedZIndex, width: useAnchorWidth ? referenceElement === null || referenceElement === void 0 ? void 0 : referenceElement.offsetWidth : undefined }, popperStyles.popper), "data-test-id": dataTestId, className: cn__default['default'](styles__default['default'].component, className, (_a = {},
                _a[styles__default['default'].arrowShift] = arrowShift,
                _a)) }, attributes.popper),
            React__default['default'].createElement("div", { className: cn__default['default'](styles__default['default'].inner, popperClassName), style: style },
                React__default['default'].createElement("div", { className: cn__default['default']((_b = {}, _b[styles__default['default'].scrollableContent] = availableHeight, _b)) }, children),
                withArrow && (React__default['default'].createElement("div", { ref: setArrowElement, style: popperStyles.arrow, className: cn__default['default'](styles__default['default'].arrow, arrowClassName) })))));
    };
    return (React__default['default'].createElement(coreComponentsStack.Stack, { value: zIndex }, function (computedZIndex) { return (React__default['default'].createElement(coreComponentsPortal.Portal, { getPortalContainer: getPortalContainer }, withTransition ? (React__default['default'].createElement(reactTransitionGroup.CSSTransition, __assign({ unmountOnExit: true, classNames: CSS_TRANSITION_CLASS_NAMES }, transition, { in: open }), renderContent(computedZIndex, { transitionDuration: transitionDuration }))) : (open && renderContent(computedZIndex)))); }));
});

exports.Popover = Popover;
