import React, { useCallback } from 'react';
import 'classnames';
import '../../../../checkbox/modern';
import '../../components/checkmark/Component.js';
import { Option } from '../../components/option/Component.js';
import { Skeleton } from '../../../../skeleton/modern';

var styles = {"skeleton":"select__skeleton_je769"};
require('./index.css');

function useSelectWithLoading({ loading = false, visibleOptions = 6, }) {
    const renderOption = useCallback(props => (React.createElement(Option, Object.assign({}, props, { Checkmark: null, highlighted: loading ? false : props.highlighted }))), [loading]);
    const options = Array(visibleOptions)
        .fill(0)
        .map((_, key) => ({
        key: `loading-${key}`,
        disabled: true,
        content: React.createElement(Skeleton, { className: styles.skeleton, visible: true }),
    }));
    if (!loading)
        return null;
    return {
        Option: renderOption,
        options,
    };
}

export { useSelectWithLoading };
