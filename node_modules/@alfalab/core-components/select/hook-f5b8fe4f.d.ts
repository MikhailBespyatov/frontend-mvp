/// <reference types="react" />
import { OptionShape, BaseSelectProps } from "./index";
type useSelectWithApplyProps = {
    /**
     * Список выбранных пунктов
     */
    selected: BaseSelectProps['selected'];
    /**
     * Список вариантов выбора
     */
    options: BaseSelectProps['options'];
    /**
     * Обработчик выбора
     */
    onChange: BaseSelectProps['onChange'];
    /**
     * Компонент выпадающего меню
     */
    OptionsList?: BaseSelectProps['OptionsList'];
    /**
     * Показывать кнопку очистки
     */
    showClear?: boolean;
    /**
     * Показывать пункт "Выбрать все"
     */
    showSelectAll?: boolean;
};
declare const SELECT_ALL_KEY = "select_all";
declare function useSelectWithApply({ options, selected, onChange, OptionsList, showClear, showSelectAll, }: useSelectWithApplyProps): {
    OptionsList: import("react").ForwardRefExoticComponent<import("./index").OptionsListProps & {
        showClear?: boolean | undefined;
        onApply?: (() => void) | undefined;
        onClear?: (() => void) | undefined;
        onClose?: (() => void) | undefined;
        selectedDraft?: OptionShape[] | undefined;
        OptionsList?: import("react").FC<import("./index").OptionsListProps & import("react").RefAttributes<unknown>> | undefined;
    } & import("react").RefAttributes<unknown>>;
    optionsListProps: {
        OptionsList: import("react").FC<import("./index").OptionsListProps> | undefined;
        showClear: boolean;
        onClear: () => void;
        onApply: () => void;
        onClose: () => void;
        selectedDraft: OptionShape[];
    };
    allowUnselect: boolean;
    multiple: boolean;
    options: (OptionShape | import("./index").GroupShape | {
        key: string;
        content: string;
    })[];
    onChange: (payload: {
        selected: OptionShape | null;
        selectedMultiple: OptionShape[];
        initiator: OptionShape | null;
        name?: string | undefined;
    }) => void;
    selected: string | OptionShape | (string | OptionShape)[] | null | undefined;
};
export { SELECT_ALL_KEY, useSelectWithApply };
