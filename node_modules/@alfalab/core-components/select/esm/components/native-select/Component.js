import { _ as __rest, a as __assign } from '../../tslib.es6-06329489.js';
import React, { forwardRef, useCallback } from 'react';
import { isGroup } from '../../utils.js';

var Option = function (_a) {
    var option = _a.option;
    return (React.createElement("option", { value: option.key, disabled: option.disabled }, typeof option.content === 'string' ? option.content : option.key));
};
var Group = function (_a) {
    var label = _a.label, options = _a.options;
    return (React.createElement("optgroup", { label: label }, options.map(function (option) { return (React.createElement(Option, { option: option, key: option.key })); })));
};
var NativeSelect = forwardRef(function (_a, ref) {
    var className = _a.className, disabled = _a.disabled, multiple = _a.multiple, value = _a.value, name = _a.name, options = _a.options, onChange = _a.onChange, restProps = __rest(_a, ["className", "disabled", "multiple", "value", "name", "options", "onChange"]);
    var handleClick = useCallback(function (event) {
        event.stopPropagation();
    }, []);
    return (React.createElement("select", __assign({ className: className, disabled: disabled, multiple: multiple, name: name, value: value, onChange: onChange, onClick: handleClick, ref: ref }, restProps), options.map(function (option) {
        return isGroup(option) ? (React.createElement(Group, __assign({}, option, { key: option.label }))) : (React.createElement(Option, { option: option, key: option.key }));
    })));
});

export { NativeSelect };
