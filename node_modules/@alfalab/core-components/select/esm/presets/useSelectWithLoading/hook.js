import { a as __assign } from '../../tslib.es6-06329489.js';
import React, { useCallback } from 'react';
import 'classnames';
import '../../../../checkbox/esm';
import '../../components/checkmark/Component.js';
import { Option } from '../../components/option/Component.js';
import { Skeleton } from '../../../../skeleton/esm';

var styles = {"skeleton":"select__skeleton_je769"};
require('./index.css');

function useSelectWithLoading(_a) {
    var _b = _a.loading, loading = _b === void 0 ? false : _b, _c = _a.visibleOptions, visibleOptions = _c === void 0 ? 6 : _c;
    var renderOption = useCallback(function (props) { return (React.createElement(Option, __assign({}, props, { Checkmark: null, highlighted: loading ? false : props.highlighted }))); }, [loading]);
    var options = Array(visibleOptions)
        .fill(0)
        .map(function (_, key) { return ({
        key: "loading-" + key,
        disabled: true,
        content: React.createElement(Skeleton, { className: styles.skeleton, visible: true }),
    }); });
    if (!loading)
        return null;
    return {
        Option: renderOption,
        options: options,
    };
}

export { useSelectWithLoading };
