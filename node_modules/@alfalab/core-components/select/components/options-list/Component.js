Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('../../tslib.es6-7a40dfc0.js');
var React = require('react');
var cn = require('classnames');
var utils = require('../../utils.js');
var mergeRefs = require('react-merge-refs');
var components_optgroup_Component = require('../optgroup/Component.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cn__default = /*#__PURE__*/_interopDefaultLegacy(cn);
var mergeRefs__default = /*#__PURE__*/_interopDefaultLegacy(mergeRefs);

var styles = {"optionsList":"select__optionsList_1guhs","scrollable":"select__scrollable_1guhs","emptyPlaceholder":"select__emptyPlaceholder_1guhs","l":"select__l_1guhs","xl":"select__xl_1guhs"};
require('./index.css');

var createCounter = function () {
    var count = 0;
    // eslint-disable-next-line no-plusplus
    return function () { return count++; };
};
var OptionsList = React.forwardRef(function (_a, ref) {
    var _b = _a.size, size = _b === void 0 ? 's' : _b, className = _a.className, Option = _a.Option, getOptionProps = _a.getOptionProps, _c = _a.options, options = _c === void 0 ? [] : _c, _d = _a.Optgroup, Optgroup = _d === void 0 ? components_optgroup_Component.Optgroup : _d, dataTestId = _a.dataTestId, emptyPlaceholder = _a.emptyPlaceholder, _e = _a.visibleOptions, visibleOptions = _e === void 0 ? 5 : _e, onScroll = _a.onScroll, open = _a.open, header = _a.header, footer = _a.footer;
    var renderOption = React.useCallback(function (option, index) { return (React__default['default'].createElement(Option, tslib_es6.__assign({ key: option.key }, getOptionProps(option, index)))); }, [getOptionProps]);
    var listRef = React.useRef(null);
    var counter = createCounter();
    var renderGroup = React.useCallback(function (group) { return (React__default['default'].createElement(Optgroup, { label: group.label, key: group.label, size: size }, group.options.map(function (option) { return renderOption(option, counter()); }))); }, [counter, renderOption, size]);
    utils.useVisibleOptions({
        visibleOptions: visibleOptions,
        listRef: listRef,
        open: open,
        invalidate: options,
    });
    if (options.length === 0 && !emptyPlaceholder) {
        return null;
    }
    return (React__default['default'].createElement("div", { className: cn__default['default'](styles.optionsList, styles[size], className), "data-test-id": dataTestId },
        header,
        React__default['default'].createElement("div", { className: styles.scrollable, ref: mergeRefs__default['default']([listRef, ref]), onScroll: onScroll },
            options.map(function (option) {
                return utils.isGroup(option) ? renderGroup(option) : renderOption(option, counter());
            }),
            emptyPlaceholder && options.length === 0 && (React__default['default'].createElement("div", { className: styles.emptyPlaceholder }, emptyPlaceholder))),
        footer));
});

exports.OptionsList = OptionsList;
