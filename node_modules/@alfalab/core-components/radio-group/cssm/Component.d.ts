/// <reference types="react" />
import React from 'react';
import { ReactNode, ChangeEvent, MouseEvent } from "react";
type Direction = 'horizontal' | 'vertical';
type RadioGroupType = 'radio' | 'tag';
type RadioGroupProps = {
    /**
     * Заголовок группы
     */
    label?: ReactNode;
    /**
     * Направление
     */
    direction?: Direction;
    /**
     * Тип компонента
     */
    type?: RadioGroupType;
    /**
     * Дополнительный класс
     */
    className?: string;
    /**
     * Отображение ошибки
     */
    error?: ReactNode | boolean;
    /**
     * Текст подсказки снизу
     */
    hint?: ReactNode;
    /**
     * Дочерние элементы. Ожидаются компоненты `Radio` или `Tag`
     */
    children: ReactNode;
    /**
     * Обработчик изменения значения 'checked' одного из дочерних компонентов
     */
    onChange?: (event?: ChangeEvent | MouseEvent, payload?: {
        value: string;
        name?: string;
    }) => void;
    /**
     * Управление возможностью изменения состояния 'checked' дочерних компонентов Radio | Tag
     */
    disabled?: boolean;
    /**
     * Идентификатор для систем автоматизированного тестирования
     */
    dataTestId?: string;
    /**
     * Атрибут name для всех дочерних компонентов
     */
    name?: string;
    /**
     * Value выбранного дочернего элемента
     */
    value?: string;
};
declare const RadioGroup: React.ForwardRefExoticComponent<RadioGroupProps & React.RefAttributes<HTMLDivElement>>;
export { Direction, RadioGroupType, RadioGroupProps, RadioGroup };
