/// <reference types="react" />
import React from 'react';
import { ReactNode, MouseEvent, ReactElement, KeyboardEvent } from "react";
import { ComponentProps as ButtonProps } from "../button";
type PlateProps = {
    /**
     * Управление наличием закрывающего крестика
     */
    hasCloser?: boolean;
    /**
     * Управление наличием стрелки скрытия контента
     */
    foldable?: boolean;
    /**
     * Управление видимостью контента (controlled)
     */
    folded?: boolean;
    /**
     * Начальное состояние контента при foldable={ true }
     */
    defaultFolded?: boolean;
    /**
     * Слот слева
     */
    leftAddons?: ReactNode;
    /**
     * Дочерние элементы
     */
    children?: ReactNode;
    /**
     * Заголовок компонента
     */
    title?: ReactNode;
    /**
     * Вид компонента
     */
    view?: 'common' | 'negative' | 'positive' | 'attention';
    /**
     * Набор действий
     */
    buttons?: Array<ReactElement<ButtonProps>>;
    /**
     * Дополнительный класс
     */
    className?: string;
    /**
     * Дополнительный класс для кнопок
     */
    buttonsClassName?: string;
    /**
     * Дополнительный класс для контента
     */
    contentClassName?: string;
    /**
     * Обработчик клика по плашке
     */
    onClick?: (event?: MouseEvent<HTMLDivElement>) => void;
    /**
     * Обработчик клика по крестику
     */
    onClose?: (event?: MouseEvent<HTMLButtonElement>) => void;
    /**
     * Обработчик сворачивания
     */
    onToggle?: (event: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>, payload: {
        folded: boolean;
    }) => void;
    /**
     * Идентификатор для систем автоматизированного тестирования
     */
    dataTestId?: string;
};
declare const Plate: React.ForwardRefExoticComponent<PlateProps & React.RefAttributes<HTMLDivElement>>;
export { PlateProps, Plate };
