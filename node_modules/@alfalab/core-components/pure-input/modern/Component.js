import React, { useRef } from 'react';
import cn from 'classnames';
import mergeRefs from 'react-merge-refs';
import { useFocus } from '@alfalab/hooks';

var styles = {"input":"pure-input__input_xshwz","hasLabel":"pure-input__hasLabel_xshwz","clearIcon":"pure-input__clearIcon_xshwz","errorIcon":"pure-input__errorIcon_xshwz","successIcon":"pure-input__successIcon_xshwz","error":"pure-input__error_xshwz","component":"pure-input__component_xshwz","block":"pure-input__block_xshwz","s":"pure-input__s_xshwz","m":"pure-input__m_xshwz","l":"pure-input__l_xshwz","xl":"pure-input__xl_xshwz","focusVisible":"pure-input__focusVisible_xshwz"};
require('./index.css');

const PureInput = React.forwardRef(({ size = 's', type = 'text', block = false, className, dataTestId, ...restProps }, ref) => {
    const inputRef = useRef(null);
    const [focusVisible] = useFocus(inputRef, 'keyboard');
    return (React.createElement("input", Object.assign({}, restProps, { className: cn(styles.component, styles[size], {
            [styles.block]: block,
            [styles.focusVisible]: focusVisible,
        }, className), ref: mergeRefs([ref, inputRef]), type: type, "data-test-id": dataTestId })));
});
/**
 * Для отображения в сторибуке
 */
PureInput.defaultProps = {
    size: 's',
    type: 'text',
    block: false,
};

export { PureInput };
