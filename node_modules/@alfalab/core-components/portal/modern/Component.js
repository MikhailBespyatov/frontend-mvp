import { forwardRef, useState, useEffect } from 'react';
import { createPortal } from 'react-dom';
import { getDefaultPortalContainer, setRef } from './utils.js';

const Portal = forwardRef(({ getPortalContainer = getDefaultPortalContainer, children }, ref) => {
    const [mountNode, setMountNode] = useState(null);
    useEffect(() => {
        setMountNode(getPortalContainer());
    }, [getPortalContainer]);
    useEffect(() => {
        if (mountNode) {
            setRef(ref, mountNode);
            return () => {
                setRef(ref, null);
            };
        }
        return () => null;
    }, [ref, mountNode]);
    return mountNode ? createPortal(children, mountNode) : mountNode;
});

export { Portal };
