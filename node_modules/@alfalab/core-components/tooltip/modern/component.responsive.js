import React, { Fragment } from 'react';
import 'classnames';
import 'react-merge-refs';
import { useMedia } from '@alfalab/hooks';
import '../../popover/modern';
import { Tooltip } from './Component.js';
import { BottomSheet } from '../../bottom-sheet/modern';

var styles = {"target":"tooltip__target_zwtes","overlap":"tooltip__overlap_zwtes"};
require('./responsive.css');

const TooltipResponsive = ({ defaultMatch = 'mobile', content, children, mobileActionButton, onOpen, ...restProps }) => {
    const [view] = useMedia([
        ['mobile', '(max-width: 767px)'],
        ['desktop', '(min-width: 768px)'],
    ], defaultMatch);
    const handleOpen = () => {
        onOpen();
    };
    const isMobile = view === 'mobile';
    return isMobile ? (React.createElement(Fragment, null,
        React.createElement(BottomSheet, Object.assign({}, restProps, { actionButton: mobileActionButton }), content),
        React.createElement("div", { onClick: handleOpen, className: styles.target },
            children.props.disabled && React.createElement("div", { className: styles.overlap }),
            children))) : (React.createElement(Tooltip, Object.assign({}, restProps, { content: content, onOpen: onOpen }), children));
};

export { TooltipResponsive };
