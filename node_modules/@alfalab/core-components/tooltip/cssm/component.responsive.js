Object.defineProperty(exports, '__esModule', { value: true });

var Component = require('./Component-9aae2909.js');
var React = require('react');
require('classnames');
require('react-merge-refs');
require('../../popover/cssm');
require('./index.module.css');
var hooks = require('@alfalab/hooks');
var coreComponentsBottomSheet = require('../../bottom-sheet/cssm');
var styles = require('./responsive.module.css');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var styles__default = /*#__PURE__*/_interopDefaultLegacy(styles);

var TooltipResponsive = function (_a) {
    var _b = _a.defaultMatch, defaultMatch = _b === void 0 ? 'mobile' : _b, content = _a.content, children = _a.children, mobileActionButton = _a.mobileActionButton, onOpen = _a.onOpen, restProps = Component.__rest(_a, ["defaultMatch", "content", "children", "mobileActionButton", "onOpen"]);
    var view = hooks.useMedia([
        ['mobile', '(max-width: 767px)'],
        ['desktop', '(min-width: 768px)'],
    ], defaultMatch)[0];
    var handleOpen = function () {
        onOpen();
    };
    var isMobile = view === 'mobile';
    return isMobile ? (React__default['default'].createElement(React.Fragment, null,
        React__default['default'].createElement(coreComponentsBottomSheet.BottomSheet, Component.__assign({}, restProps, { actionButton: mobileActionButton }), content),
        React__default['default'].createElement("div", { onClick: handleOpen, className: styles__default['default'].target },
            children.props.disabled && React__default['default'].createElement("div", { className: styles__default['default'].overlap }),
            children))) : (React__default['default'].createElement(Component.Tooltip, Component.__assign({}, restProps, { content: content, onOpen: onOpen }), children));
};

exports.TooltipResponsive = TooltipResponsive;
