import React, { Fragment } from 'react';
import 'classnames';
import 'react-merge-refs';
import '../../popover/esm';
import { _ as __rest, a as __assign, T as Tooltip } from './Component-72ed3da9.js';
import { useMedia } from '@alfalab/hooks';
import { BottomSheet } from '../../bottom-sheet/esm';

var styles = {"target":"tooltip__target_zwtes","overlap":"tooltip__overlap_zwtes"};
require('./responsive.css');

var TooltipResponsive = function (_a) {
    var _b = _a.defaultMatch, defaultMatch = _b === void 0 ? 'mobile' : _b, content = _a.content, children = _a.children, mobileActionButton = _a.mobileActionButton, onOpen = _a.onOpen, restProps = __rest(_a, ["defaultMatch", "content", "children", "mobileActionButton", "onOpen"]);
    var view = useMedia([
        ['mobile', '(max-width: 767px)'],
        ['desktop', '(min-width: 768px)'],
    ], defaultMatch)[0];
    var handleOpen = function () {
        onOpen();
    };
    var isMobile = view === 'mobile';
    return isMobile ? (React.createElement(Fragment, null,
        React.createElement(BottomSheet, __assign({}, restProps, { actionButton: mobileActionButton }), content),
        React.createElement("div", { onClick: handleOpen, className: styles.target },
            children.props.disabled && React.createElement("div", { className: styles.overlap }),
            children))) : (React.createElement(Tooltip, __assign({}, restProps, { content: content, onOpen: onOpen }), children));
};

export { TooltipResponsive };
