import React, { useContext, useRef } from 'react';
import cn from 'classnames';
import { useFocus } from '@alfalab/hooks';
import { GalleryContext } from '../../context.js';

var styles = {"component":"gallery__component_1wvtn","active":"gallery__active_1wvtn","image":"gallery__image_1wvtn","preview":"gallery__preview_1wvtn","loading":"gallery__loading_1wvtn","brokenImageWrapper":"gallery__brokenImageWrapper_1wvtn","brokenIcon":"gallery__brokenIcon_1wvtn","focused":"gallery__focused_1wvtn"};
require('./index.css');

const ImagePreview = ({ image, active = false, index, onSelect, className }) => {
    const { imagesMeta } = useContext(GalleryContext);
    const ref = useRef(null);
    const handleClick = () => {
        onSelect(index);
    };
    const handleKeyDown = event => {
        if (event.key === 'Enter') {
            onSelect(index);
        }
    };
    const [focused] = useFocus(ref, 'keyboard');
    const meta = imagesMeta[index];
    const isBroken = Boolean(meta?.broken);
    return (React.createElement("div", { className: cn(styles.component, { [styles.active]: active, [styles.focused]: focused }, className), onClick: handleClick, role: 'button', onKeyDown: handleKeyDown, tabIndex: 0, ref: ref, "aria-label": `Перейти к изображению ${index + 1}` }, isBroken ? (React.createElement("div", { className: cn(styles.preview, styles.brokenImageWrapper) },
        React.createElement("div", { className: styles.brokenIcon }))) : (React.createElement("div", { className: cn(styles.preview, styles.image, {
            [styles.broken]: isBroken,
            [styles.loading]: !meta,
        }), style: { backgroundImage: `url(${image.src})` } }))));
};

export { ImagePreview };
