import React from 'react';
import cn from 'classnames';
import { isSmallImage, getImageAlt } from './utils/utils.js';
import { TestIds } from './utils/constants.js';
import { Typography } from '../../typography/esm';

var styles = {"component":"gallery__component_xiewl","swiper":"gallery__swiper_xiewl","singleSlide":"gallery__singleSlide_xiewl","hidden":"gallery__hidden_xiewl","slide":"gallery__slide_xiewl","slideLoading":"gallery__slideLoading_xiewl","image":"gallery__image_xiewl","smallImage":"gallery__smallImage_xiewl","verticalImageFit":"gallery__verticalImageFit_xiewl","horizontalImageFit":"gallery__horizontalImageFit_xiewl","arrow":"gallery__arrow_xiewl","focused":"gallery__focused_xiewl","placeholder":"gallery__placeholder_xiewl","brokenImgWrapper":"gallery__brokenImgWrapper_xiewl","brokenImgIcon":"gallery__brokenImgIcon_xiewl","fullScreenImage":"gallery__fullScreenImage_xiewl"};
require('./components/image-viewer/index.css');

var Slide = function (_a) {
    var _b;
    var isActive = _a.isActive, meta = _a.meta, swiperAspectRatio = _a.swiperAspectRatio, imageAspectRatio = _a.imageAspectRatio, image = _a.image, index = _a.index, swiperHeight = _a.swiperHeight, slideVisible = _a.slideVisible, handleLoad = _a.handleLoad, handleLoadError = _a.handleLoadError;
    var broken = Boolean(meta === null || meta === void 0 ? void 0 : meta.broken);
    var small = isSmallImage(meta);
    var verticalImageFit = !small && swiperAspectRatio > imageAspectRatio;
    var horizontalImageFit = !small && swiperAspectRatio <= imageAspectRatio;
    return (React.createElement(SlideInner, { active: isActive, broken: broken, loading: !meta, withPlaceholder: small || broken },
        React.createElement("img", { src: image.src, alt: getImageAlt(image, index), className: cn((_b = {},
                _b[styles.smallImage] = small,
                _b[styles.image] = !small,
                _b[styles.verticalImageFit] = verticalImageFit,
                _b[styles.horizontalImageFit] = horizontalImageFit,
                _b)), onLoad: function (event) { return handleLoad(event, index); }, onError: function () { return handleLoadError(index); }, style: {
                maxHeight: swiperHeight + "px",
            }, "data-test-id": slideVisible ? TestIds.ACTIVE_IMAGE : undefined })));
};
var SlideInner = function (_a) {
    var _b;
    var children = _a.children, broken = _a.broken, loading = _a.loading, withPlaceholder = _a.withPlaceholder;
    var content = broken ? (React.createElement("div", { className: styles.brokenImgWrapper },
        React.createElement("div", { className: styles.brokenImgIcon }),
        React.createElement(Typography.Text, { view: 'primary-small', color: 'secondary' }, "\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435"))) : (children);
    return (React.createElement("div", { className: cn(styles.slide, (_b = {}, _b[styles.slideLoading] = loading, _b)) }, withPlaceholder ? React.createElement("div", { className: styles.placeholder }, content) : content));
};

export { Slide as S, styles as s };
