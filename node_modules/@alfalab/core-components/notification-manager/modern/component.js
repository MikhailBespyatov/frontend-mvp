import React, { forwardRef } from 'react';
import cn from 'classnames';
import { TransitionGroup, CSSTransition } from 'react-transition-group';
import { Portal } from '../../portal/modern';
import { stackingOrder, Stack } from '../../stack/modern';
import { Notification } from './components/notification/component.js';

var styles = {"component":"notification-manager__component_13ila","notification":"notification-manager__notification_13ila","enter":"notification-manager__enter_13ila","enterActive":"notification-manager__enterActive_13ila","exit":"notification-manager__exit_13ila","exitActive":"notification-manager__exitActive_13ila"};
require('./index.css');

const CSS_TRANSITION_CLASS_NAMES = {
    enter: styles.enter,
    enterActive: styles.enterActive,
    exit: styles.exit,
    exitActive: styles.exitActive,
};
const NotificationManager = forwardRef(({ notifications, className, dataTestId, zIndex = stackingOrder.TOAST, style = {}, onRemoveNotification, ...restProps }, ref) => {
    return (React.createElement(Stack, { value: zIndex }, computedZIndex => (React.createElement(Portal, null,
        React.createElement("div", Object.assign({ className: cn(styles.component, className), ref: ref, "data-test-id": dataTestId, style: {
                zIndex: computedZIndex,
                ...style,
            } }, restProps),
            React.createElement(TransitionGroup, null, notifications.map(element => (React.createElement(CSSTransition, { key: element.props.id, timeout: 400, classNames: CSS_TRANSITION_CLASS_NAMES, unmountOnExit: true },
                React.createElement(Notification, { element: element, className: styles.notification, onRemoveNotification: onRemoveNotification }))))))))));
});

export { NotificationManager };
