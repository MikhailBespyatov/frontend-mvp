Object.defineProperty(exports, '__esModule', { value: true });

var components_notification_component = require('./component-d28c47be.js');
var React = require('react');
var cn = require('classnames');
var reactTransitionGroup = require('react-transition-group');
var coreComponentsPortal = require('../../portal/cssm');
var coreComponentsStack = require('../../stack/cssm');
var styles = require('./index.module.css');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cn__default = /*#__PURE__*/_interopDefaultLegacy(cn);
var styles__default = /*#__PURE__*/_interopDefaultLegacy(styles);

var CSS_TRANSITION_CLASS_NAMES = {
    enter: styles__default['default'].enter,
    enterActive: styles__default['default'].enterActive,
    exit: styles__default['default'].exit,
    exitActive: styles__default['default'].exitActive,
};
var NotificationManager = React.forwardRef(function (_a, ref) {
    var notifications = _a.notifications, className = _a.className, dataTestId = _a.dataTestId, _b = _a.zIndex, zIndex = _b === void 0 ? coreComponentsStack.stackingOrder.TOAST : _b, _c = _a.style, style = _c === void 0 ? {} : _c, onRemoveNotification = _a.onRemoveNotification, restProps = components_notification_component.__rest(_a, ["notifications", "className", "dataTestId", "zIndex", "style", "onRemoveNotification"]);
    return (React__default['default'].createElement(coreComponentsStack.Stack, { value: zIndex }, function (computedZIndex) { return (React__default['default'].createElement(coreComponentsPortal.Portal, null,
        React__default['default'].createElement("div", components_notification_component.__assign({ className: cn__default['default'](styles__default['default'].component, className), ref: ref, "data-test-id": dataTestId, style: components_notification_component.__assign({ zIndex: computedZIndex }, style) }, restProps),
            React__default['default'].createElement(reactTransitionGroup.TransitionGroup, null, notifications.map(function (element) { return (React__default['default'].createElement(reactTransitionGroup.CSSTransition, { key: element.props.id, timeout: 400, classNames: CSS_TRANSITION_CLASS_NAMES, unmountOnExit: true },
                React__default['default'].createElement(components_notification_component.Notification, { element: element, className: styles__default['default'].notification, onRemoveNotification: onRemoveNotification }))); }))))); }));
});

exports.NotificationManager = NotificationManager;
