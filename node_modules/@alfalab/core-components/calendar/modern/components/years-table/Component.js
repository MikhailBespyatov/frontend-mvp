import React, { useRef, useCallback, useLayoutEffect } from 'react';
import 'classnames';
import { isSameYear, isThisYear } from 'date-fns';
import '../../../../button/modern';
import { SelectButton } from '../select-button/Component.js';

var styles = {"yearsTable":"calendar__yearsTable_dnrjm","inner":"calendar__inner_dnrjm","button":"calendar__button_dnrjm"};
require('./index.css');

const YearsTable = ({ selectedYear, years = [], getYearProps, onScroll, }) => {
    const ref = useRef(null);
    const view = useCallback((year) => {
        if (selectedYear && isSameYear(selectedYear, year))
            return 'selected';
        if (isThisYear(year))
            return 'outlined';
        return 'default';
    }, [selectedYear]);
    const handleScroll = useCallback((event) => {
        onScroll(event.currentTarget.scrollTop);
    }, [onScroll]);
    useLayoutEffect(() => {
        const listNode = ref.current;
        const selector = `.${styles.button}[tabIndex="0"]`;
        const selectedYearNode = listNode && listNode.querySelector(selector);
        if (listNode && selectedYearNode) {
            const topIndent = listNode.clientHeight / 2 - selectedYearNode.clientHeight / 2;
            listNode.scrollTop = selectedYearNode.offsetTop - topIndent;
            onScroll(listNode.scrollTop);
        }
    }, [onScroll, selectedYear]);
    return (React.createElement("div", { className: styles.yearsTable, onScroll: handleScroll, ref: ref },
        React.createElement("div", { className: styles.inner }, years.map(year => (React.createElement(SelectButton, Object.assign({}, getYearProps(year), { key: year.getFullYear(), view: view(year), className: styles.button }), year.getFullYear()))))));
};

export { YearsTable };
