import { _ as __assign } from '../../tslib.es6-b934f8ee.js';
import React, { useRef, useCallback, useLayoutEffect } from 'react';
import 'classnames';
import { isSameYear, isThisYear } from 'date-fns';
import '../../../../button/esm';
import { SelectButton } from '../select-button/Component.js';

var styles = {"yearsTable":"calendar__yearsTable_dnrjm","inner":"calendar__inner_dnrjm","button":"calendar__button_dnrjm"};
require('./index.css');

var YearsTable = function (_a) {
    var selectedYear = _a.selectedYear, _b = _a.years, years = _b === void 0 ? [] : _b, getYearProps = _a.getYearProps, onScroll = _a.onScroll;
    var ref = useRef(null);
    var view = useCallback(function (year) {
        if (selectedYear && isSameYear(selectedYear, year))
            return 'selected';
        if (isThisYear(year))
            return 'outlined';
        return 'default';
    }, [selectedYear]);
    var handleScroll = useCallback(function (event) {
        onScroll(event.currentTarget.scrollTop);
    }, [onScroll]);
    useLayoutEffect(function () {
        var listNode = ref.current;
        var selector = "." + styles.button + "[tabIndex=\"0\"]";
        var selectedYearNode = listNode && listNode.querySelector(selector);
        if (listNode && selectedYearNode) {
            var topIndent = listNode.clientHeight / 2 - selectedYearNode.clientHeight / 2;
            listNode.scrollTop = selectedYearNode.offsetTop - topIndent;
            onScroll(listNode.scrollTop);
        }
    }, [onScroll, selectedYear]);
    return (React.createElement("div", { className: styles.yearsTable, onScroll: handleScroll, ref: ref },
        React.createElement("div", { className: styles.inner }, years.map(function (year) { return (React.createElement(SelectButton, __assign({}, getYearProps(year), { key: year.getFullYear(), view: view(year), className: styles.button }), year.getFullYear())); }))));
};

export { YearsTable };
