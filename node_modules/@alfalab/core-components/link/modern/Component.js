import React, { forwardRef, useRef } from 'react';
import cn from 'classnames';
import mergeRefs from 'react-merge-refs';
import { useFocus } from '@alfalab/hooks';

var styles = {"component":"link__component_1iqr1","text":"link__text_1iqr1","withAddons":"link__withAddons_1iqr1","focused":"link__focused_1iqr1","pseudo":"link__pseudo_1iqr1","addons":"link__addons_1iqr1"};
require('./index.css');

var defaultColors = {"primary":"link__primary_u2r00","secondary":"link__secondary_u2r00","default":"link__default_u2r00"};
require('./default.css');

var invertedColors = {"primary":"link__primary_17f6y","secondary":"link__secondary_17f6y","default":"link__default_17f6y"};
require('./inverted.css');

const colorStyles = {
    default: defaultColors,
    inverted: invertedColors,
};
const Link = forwardRef(({ view = 'primary', pseudo = false, leftAddons, rightAddons, className, dataTestId, children, colors = 'default', href, Component = 'a', ...restProps }, ref) => {
    const linkRef = useRef(null);
    const [focused] = useFocus(linkRef, 'keyboard');
    const componentProps = {
        className: cn(styles.component, colorStyles[colors][view], {
            [styles.pseudo]: pseudo,
            [styles.focused]: focused,
            [styles.withAddons]: leftAddons || rightAddons,
        }, className),
        'data-test-id': dataTestId,
        rel: restProps.target === '_blank' ? 'noreferrer noopener' : undefined,
        // Для совместимости с react-router-dom, меняем href на to
        [typeof Component === 'string' ? 'href' : 'to']: href,
    };
    return (React.createElement(Component, Object.assign({}, componentProps, restProps, { ref: mergeRefs([linkRef, ref]) }), leftAddons || rightAddons ? (React.createElement(React.Fragment, null,
        leftAddons && React.createElement("span", { className: styles.addons }, leftAddons),
        children && (React.createElement("span", null,
            React.createElement("span", { className: styles.text }, children))),
        rightAddons && React.createElement("span", { className: styles.addons }, rightAddons))) : (React.createElement("span", { className: styles.text }, children))));
});
/**
 * Для отображения в сторибуке
 */
Link.defaultProps = {
    view: 'primary',
    pseudo: false,
};

export { Link };
